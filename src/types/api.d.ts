/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Movies */
        get: operations["read_movies_movies_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies/{movie_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Movie */
        get: operations["read_movie_movies__movie_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/escape-rooms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Escape Rooms */
        get: operations["read_escape_rooms_escape_rooms_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/escape-rooms/{escape_room_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Escape Room */
        get: operations["read_escape_room_escape_rooms__escape_room_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** EscapeRoomList */
        EscapeRoomList: {
            /** Escape Rooms */
            escape_rooms: components["schemas"]["EscapeRoomSchema"][];
        };
        /** EscapeRoomSchema */
        EscapeRoomSchema: {
            /** Id */
            id: number;
            /** Theme Name */
            theme_name: string;
            /** Branch Name */
            branch_name: string;
            /** Difficulty */
            difficulty: number | null;
            /** Horror Level */
            horror_level: number | null;
            /** Location */
            location: string;
            /** Poster Image Url */
            poster_image_url: string | null;
            /** Play Time */
            play_time: number | null;
            /** Synopsis */
            synopsis: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** MovieList */
        MovieList: {
            /** Movies */
            movies: components["schemas"]["MovieSchema"][];
        };
        /** MovieSchema */
        MovieSchema: {
            /** Id */
            id: number;
            /** Tmdb Id */
            tmdb_id: number;
            /** Title */
            title: string;
            /** Original Title */
            original_title: string | null;
            /** Overview */
            overview: string | null;
            /** Release Date */
            release_date: string | null;
            /** Vote Average */
            vote_average: number | null;
            /** Vote Count */
            vote_count: number | null;
            /** Poster Path */
            poster_path: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    read_movies_movies_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MovieList"];
                };
            };
        };
    };
    read_movie_movies__movie_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                movie_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MovieSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_escape_rooms_escape_rooms_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscapeRoomList"];
                };
            };
        };
    };
    read_escape_room_escape_rooms__escape_room_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                escape_room_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EscapeRoomSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
